@inject DialogService DialogService
@inject NavigationManager NavigationManager
@inject CytoscapeService CytoscapeService
@inject OpenRouterService OpenRouterService
@inject ThemeService ThemeService

@inherits LayoutComponentBase

<RadzenDialog />
<RadzenComponents />

<HeadContent>
    <RadzenTheme Theme="@_currentTheme" />
</HeadContent>

<RadzenLayout Style="grid-template-columns: 1fr auto; grid-template-areas: 'rz-header rz-header' 'rz-body rz-sidebar'">
    <RadzenHeader Style="height: 2vh;">
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center" Gap="1rem">
            <div style="display:flex; flex-direction: row; align-content:center; align-items:center; text-align:center; gap:50px;">
                <RadzenLabel @onclick="@(() => NavigationManager.NavigateTo("/"))"
                Style="padding-left: 25px; font-size: x-large; cursor:pointer;"
                Text="MindNose" />
                <NavMenu />
            </div>

            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.NoWrap">
                <RadzenButton Icon="Light" Click="ToggleTheme" Style="width:40px; height:40px; border-radius:50%; padding:0; text-align:center;" />
                <RadzenSidebarToggle Icon="Chat" Click="OpenSideDialog" class="rz-m-0" />
            </RadzenStack>
        </RadzenStack>
    </RadzenHeader>

    <RadzenBody Style="height: 98vh; display: flex; flex-direction: column;">
        @Body
    </RadzenBody>
</RadzenLayout>

@code {
    private bool _sidebarExpanded;
    private string _currentTheme = "Material-Dark";

    protected override void OnInitialized()
    {
        ThemeService.SetTheme(_currentTheme);
    }

    async Task OpenSideDialog()
    {
        var options = new SideDialogOptions
            {
                CloseDialogOnOverlayClick = true,
                Position = DialogPosition.Right,
                ShowMask = true,
                Style = "border-radius: 15px; height: 100vh; overflow: hidden;",
                Width = "33vw",
                Height = "100%"
            };
        await DialogService.OpenSideAsync<ChatDialog>("Chat", options: options);
    }
    
    private void ToggleTheme()
    {
        _currentTheme = (_currentTheme == "Software") ? "Material-Dark" : "Software";
        ThemeService.SetTheme(_currentTheme);

        StateHasChanged();
    }
}
