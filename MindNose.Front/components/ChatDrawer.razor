<RadzenStack Style="height: 100%;">
    <RadzenCard Style="height: 100%; display: flex; flex-direction: column;">
        <div style="flex: 1; overflow-y: auto; padding: 10px; display:flex; flex-direction:column;">
            @foreach (var message in _chatMessage.Messages)
            {
                @if (message.Origin == "system")
                {
                    <div style="width: 100%; display: flex; justify-content: flex-start;">
                        <div style="background-color: palevioletred; color: white; width: fit-content; text-align: start; padding: 8px; border-radius: 10px; margin: 4px;">
                            <p style="margin: 0;">@message.Text</p>
                            <p style="margin: 0; font-size: 0.8em;">IA Chat</p>
                        </div>
                    </div>
                }
                else
                {
                    <div style="width: 100%; display: flex; justify-content: flex-end;">
                        <div style="background-color: lightgreen; color: darkgreen; width: fit-content; text-align: end; padding: 8px; border-radius: 10px; margin: 4px;">
                            <p style="margin: 0;">@message.Text</p>
                            <p style="margin: 0; font-size: 0.8em;">@message.Origin</p>
                        </div>
                    </div>
                }
            }

        </div>

        <div style="padding: 10px; border-top: 1px solid #ccc;">
            <RadzenTextArea Style="width: 100%;" />
            <RadzenButton Text="Enviar" Style="margin-top: 10px;" />
        </div>
    </RadzenCard>
</RadzenStack>

@code{
    private ChatMessage _chatMessage = new();

    protected override void OnInitialized()
    {
        for (int i = 0; i < 2; i++)
        {
            _chatMessage.Messages.Add(new Message{ Text = $"Message{i}" });
        }

        for (int i = 0; i < 3; i++)
        {
            _chatMessage.Messages.Add(new Message { Text = $"Message{i}", Origin = "User" });
        }

        for (int i = 0; i < 3; i++)
        {
            _chatMessage.Messages.Add(new Message { Text = $"Message{i}" });
        }

        for (int i = 0; i < 1; i++)
        {
            _chatMessage.Messages.Add(new Message { Text = $"Message{i}", Origin = "User" });
        }
    }

    public class ChatMessage
    {
        public List<Message> Messages { get; set; } = new();
    }

    public class Message
    {
        public string Text { get; set; } = string.Empty;
        public string Origin { get; set; } = "system";
    }
}